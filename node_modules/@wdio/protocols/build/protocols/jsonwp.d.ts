/**
 * All commands are depreacted and likely not supported by any browser.
 * A deprecation notice is attached to all commands that only exist in the JSONWireProtocol.
 *
 * @deprecated
 */
declare const _default: {
    '/status': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: ({
                name: string;
                type: string;
                description: string;
                required: boolean;
            } | {
                name: string;
                type: string;
                description: string;
                required?: undefined;
            })[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/sessions': {
        GET: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId': {
        GET: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        DELETE: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/timeouts': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/timeouts/async_script': {
        POST: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/timeouts/implicit_wait': {
        POST: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/url': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/back': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/forward': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/refresh': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/title': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/window_handle': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/window_handles': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/window': {
        DELETE: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
        };
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/frame': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/frame/parent': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/window/current/position': {
        GET: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        POST: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/window/current/size': {
        GET: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        POST: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/window/current/maximize': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/element': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/elements': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/element': {
        POST: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/elements': {
        POST: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/active': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/selected': {
        GET: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/displayed': {
        GET: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/attribute/:name': {
        GET: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/css/:propertyName': {
        GET: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/text': {
        GET: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/name': {
        GET: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/location': {
        GET: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/location_in_view': {
        GET: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/size': {
        GET: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/enabled': {
        GET: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/click': {
        POST: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
        };
    };
    '/session/:sessionId/element/:elementId/equals/:otherId': {
        GET: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/element/:elementId/submit': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
        };
    };
    '/session/:sessionId/element/:elementId/clear': {
        POST: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
        };
    };
    '/session/:sessionId/element/:elementId/value': {
        POST: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/keys': {
        POST: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/source': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/execute': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/execute_async': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/cookie': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
        DELETE: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/cookie/:name': {
        DELETE: {
            command: string;
            description: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
        };
    };
    '/session/:sessionId/dismiss_alert': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/accept_alert': {
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/alert_text': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        POST: {
            command: string;
            description: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/screenshot': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/ime/available_engines': {
        GET: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/ime/active_engine': {
        GET: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/ime/activated': {
        GET: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/ime/deactivate': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/ime/activate': {
        POST: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/orientation': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            deprecated: string;
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        POST: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/moveto': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/buttondown': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/buttonup': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/click': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/doubleclick': {
        POST: {
            command: string;
            deprecated: string;
            description: string;
            ref: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/touch/click': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/touch/scroll': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/touch/doubleclick': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/touch/flick': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/location': {
        GET: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        POST: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
    };
    '/session/:sessionId/local_storage': {
        GET: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        POST: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
        DELETE: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/local_storage/key/:key': {
        GET: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        DELETE: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
        };
    };
    '/session/:sessionId/local_storage/size': {
        GET: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/session_storage': {
        GET: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        POST: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
        };
        DELETE: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            parameters: never[];
        };
    };
    '/session/:sessionId/session_storage/key/:key': {
        GET: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
        DELETE: {
            command: string;
            description: string;
            deprecated: string;
            ref: string;
            variables: {
                name: string;
                description: string;
            }[];
            parameters: never[];
        };
    };
    '/session/:sessionId/session_storage/size': {
        GET: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/log': {
        POST: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: {
                name: string;
                type: string;
                description: string;
                required: boolean;
            }[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/log/types': {
        GET: {
            command: string;
            description: string;
            ref: string;
            deprecated: string;
            parameters: never[];
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
    '/session/:sessionId/application_cache/status': {
        GET: {
            command: string;
            description: string;
            ref: string;
            parameters: never[];
            deprecated: string;
            returns: {
                type: string;
                name: string;
                description: string;
            };
        };
    };
};
export default _default;
//# sourceMappingURL=jsonwp.d.ts.map